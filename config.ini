[DEFAULT]

# bin size/kde points
POINTS = 50

# patch dimensions
nx = 8
ny = 8
nz = 8

# overlap threshold for comparison
eta = 0.8

# patch stride: takes every sx*nx, sy*ny, sz*nz th patch
sx = 2
sy = 2
sz = 2

# evaluation metric
metric = PEARSON

# 'pass' if predicted_score>max(scores)/decisionFactor else 'fail'
decisionFactor = 2


[TRAINING]

# integer scores
discreteScores = 1,2,3,4

# xlsx file containing visual qc scores
visual_qc_excel_file= structuralQC/trainingData/visual_qc.xlsx

# fixed reference images
fixedImaget1= structuralQC/trainingData/1001-t1w-xc-reg.nii.gz
fixedImaget2= structuralQC/trainingData/1001-t2w-xc-reg.nii.gz

# training foreground mask folder
# (subfolders are defined according to subjects in the xlsx file)
maskFolder = structuralQC/trainingData/registered_foreground_masks

# training features
t1Histogram = structuralQC/trainingData/patch_histograms_t1.npy
t2Histogram = structuralQC/trainingData/path_histograms_t2.npy


[EXECUTABLES]
# path where Slicer.exe exists
Slicer = /home/tb571/Downloads/Slicer-4.9.0-2018-08-13-linux-amd64/
# path where BRAINSROIAuto.exe exists
BRAINSROIAuto= /home/tb571/Downloads/Slicer-4.9.0-2018-08-13-linux-amd64/lib/Slicer-4.9/cli-modules/
# path where antsRegistration.exe exists
antsRegistration=/home/tb571/Downloads/ANTs/antsbin/bin/


# for batch processing
[INPUT]
# structural image folder
# inside image folder, there should be a folder named after subject listed in the excel file
imageFolder= /home/tb571/Documents/structural_mri
# each line is a case inside the imageFolder
caselist= /home/tb571/Documents/structural_mri/caselist.txt
# inside subject folder, if there is any subfolder before obtaining structural image
subFolder= raw
# specify image suffix after the subject prefix
imageSuffix= -t1w-xc-reg.nii.gz

modality= t1

# if visual_qc is done already, specify the excel file, otherwise keep it empty
visual_qc_excel_file= /home/tb571/Documents/structural_mri/visual_qc.xlsx


